npm install -g yarn npm安装yarn
安装：vuecli
     npm install -g @vue/cli
     yarn global add @vue/cli
创建一个项目：
     vue create my-project
拉取Vue CLI 2.x 模板 (旧版本)
     npm install -g @vue/cli-init
     # `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同
     vue init webpack my-project
yarn的配置项：
        yarn config list// 显示所有配置项
        yarn config get <key>//显示某配置项
        yarn config delete <key> //删除某配置项
        yarn config set <key> <value> [-g|--global] //设置配置项
        yarn global list //获取yarn安装包列表
初始化一个新项目
     yarn init
全局安装包
        yarn golbal add <package>
添加包（会更新package.json和yarn.lock）：
    yarn add [package]// 在当前的项目中添加一个依赖包，会自动更新到package.json和yarn.lock文件中
    yarn add [package]@[version] // 安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-E参数
    yarn add [package]@[tag] // 安装某个tag（比如beta,next或者latest）
//不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型：
        yarn add --dev/-D// 加到 devDependencies
        yarn add --peer/-P // 加到 peerDependencies
        yarn add --optional/-O // 加到 optionalDependencies
安装包：
        yarn install //安装package.json里所有包，并将包及它的所有依赖项保存进yarn.lock
        yarn install --flat //安装一个包的单一版本
        yarn install --force //强制重新下载所有包
        yarn install --production //只安装dependencies里的包
        yarn install --no-lockfile//不读取或生成yarn.lock
        yarn install --pure-lockfile //不生成yarn.lock
将依赖项添加到不同依赖项类别中
分别添加到 devDependencies、peerDependencies 和 optionalDependencies 类别中：
     yarn add [package] --dev
     yarn add [package] --peer
     yarn add [package] --optional
升级依赖包
     yarn upgrade [package]
     yarn upgrade [package]@[version]
     yarn upgrade [package]@[tag]
移除依赖包
     yarn remove [package]                  npm uninstall [package]
安装项目的全部依赖
     yarn install                           npm install
运行脚本
     yarn run dev 用来执行在 package.json 中 scripts 属性下定义的脚本 npm run dev
     yarn run build 生成生产包